<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<project default="Distribute" name="Build and Distribute Maestro and ABC Player">
	<property name="src" value="../src" />
	<property name="target" value="../target" />
	<property name="audio" value="../audio" />
	<property name="audio_backslash" value="..\audio" />
	<property name="output" value="output" />
	<property name="build" value="build" />
	<property name="tools" location="tools" />
	<property name="basename.AbcPlayer" value="AbcPlayer" />
	<property name="basename.Maestro" value="Maestro" />
	<property name="basename.AbcTools" value="AbcTools" />
	<property file="${src}/com/digero/abcplayer/version.txt" />
	<!-- For version.AbcPlayer -->
	<property file="${src}/com/digero/maestro/version.txt" />
	<!-- For version.Maestro -->
	<property name="version.AbcTools" value="${version.AbcPlayer}" />
	<condition property="isWindows">
		<os family="windows" />
	</condition>

	<condition property="isUnix">
		<os family="unix" />
	</condition>

	<target name="mvn_windows" if="isWindows">
		<exec dir=".." executable="cmd" failonerror="true">
			<arg line="/c mvn clean install" />
		</exec>
	</target>

	<target name="mvn_unix" if="isUnix">
		<exec dir=".." executable="sh" failonerror="true">
			<arg line="-c 'mvn clean install'" />
		</exec>
	</target>

	<target name="Clean" description="Clean build folder">
		<delete dir="${build}" />
	</target>

	<target name="CopyThings" depends="mvn_windows, mvn_unix" description="Copy icons,jars and txt files to build folder">
		<mkdir dir="${build}" />
		<delete>
			<fileset dir="${build}" includes="*.log" />
		</delete>
		<copy file="abcfile.ico" todir="${build}" />
		<copy file="midifile.ico" todir="${build}" />
		<copy file="msxfile.ico" todir="${build}" />
		<!--<copy file="Start Maestro.bat" todir="${build}" />
		<copy file="Start AbcPlayer.bat" todir="${build}" />
		<copy file="Start ABC Tools.bat" todir="${build}" />-->
		<copy file="Changes since Maestro 2.5.0.txt" todir="${build}" />
		<copy todir="${build}">
			<fileset dir="${target}" includes="*.jar" />
		</copy>
		<!--		<copy todir="${target}/com/digero/maestro">
			<fileset dir="${src}/com/digero/maestro" includes="*.txt" />
		</copy>
		<copy todir="${target}/com/digero/common/midi">
			<fileset dir="${src}/com/digero/common/midi" includes="*.txt" />
		</copy>
		<copy todir="${target}/com/digero/abcplayer">
			<fileset dir="${src}/com/digero/abcplayer" includes="*.txt" />
		</copy>
		<copy todir="${target}/com/digero/common/icons">
			<fileset dir="${src}/com/digero/common/icons" includes="*.png" />
		</copy>-->
	</target>
	
	<target name="GenerateExeFiles.CheckUpToDate" description="Test if exe files needs making">
		<condition property="Exe.Exists">
			<and>
				<available file="${build}/Maestro.exe"/>
				<available file="${build}/AbcPlayer.exe"/>
				<available file="${build}/AbcTools.exe"/>
			</and>
		</condition>
	</target>
	
	<target name="GenerateExeFiles" depends="GenerateExeFiles.CheckUpToDate" unless="Exe.Exists" description="Make exe files">
		<echo>Generating EXE files</echo>
		<exec executable="${tools}/launch4j/launch4jc.exe" failonerror="true">
			<arg value="launch4j_maestro.xml" />
		</exec>
		<exec executable="${tools}/launch4j/launch4jc.exe" failonerror="true">
			<arg value="launch4j_abcplayer.xml" />
		</exec>
		<exec executable="${tools}/launch4j/launch4jc.exe" failonerror="true">
			<arg value="launch4j_abctools.xml" />
		</exec>
	</target>

	<target name="GenerateSoundFontInfo.CheckUpToDate" description="Test if LotroInstruments.txt needs making">
		<uptodate property="GenerateSoundFontInfo.uptodate" value="true" targetfile="${basedir}/${audio}/LotroInstruments/LotroInstruments.txt">
			<srcfiles dir="${src}/com/digero/tools/soundfont/" />
			<!-- Since classes are rebuilt every run, we check against the src files instead -->
		</uptodate>
		<echo message="GenerateSoundFontInfo.uptodate is now ${GenerateSoundFontInfo.uptodate}."/>
	</target>
	
	<target name="GenerateSoundFontInfo" depends="GenerateSoundFontInfo.CheckUpToDate" unless="GenerateSoundFontInfo.uptodate" description="Make LotroInstruments.txt">
		<java classname="com.digero.tools.soundfont.GenerateSoundFontInfo" classpath="${target}/classes" fork="yes" failonerror="yes">
			<arg value="${basedir}/${audio}/LotroInstruments" />
			<arg value="${basedir}/${audio}/LotroInstruments/LotroInstruments.txt" />
		</java>
	</target>

	<target name="LotroInstruments.CheckUpToDate" description="Test if SF2 needs making">
		<uptodate property="LotroInstruments.uptodate" value="true" targetfile="${build}/LotroInstruments.sf2">
			<srcfiles dir="${basedir}/${audio}/LotroInstruments" />
		</uptodate>
		<echo message="LotroInstruments.uptodate is now ${LotroInstruments.uptodate}."/>
	</target>

	<target name="LotroInstruments" depends="GenerateSoundFontInfo,LotroInstruments.CheckUpToDate" unless="LotroInstruments.uptodate" description="Make SF2 file">
		<exec executable="${tools}/sf2comp.exe" failonerror="true">
			<arg value="c" />
			<arg value="-m" />
			<arg value="-i" />
			<arg value="${audio_backslash}\LotroInstruments\LotroInstruments.txt" />
			<arg value="${build}\LotroInstruments.sf2" />
		</exec>
	</target>

	<target name="preStuff" depends="CopyThings,LotroInstruments,GenerateExeFiles" description="Make all except ZIP and MSI files"/>

	<target name="Installer" depends="preStuff" description="Make MSI file">
		<mkdir dir="${output}" />
		<property name="msipath" location="${output}/${basename.Maestro}_v${version.Maestro}.msi" />
		<echo>Building msi: ${msipath}</echo>
		<exec executable="${tools}/wix/candle.exe" failonerror="true">
			<arg value="-nologo" />
			<arg value="-arch" />
			<arg value="x64" />
			<arg value="-dMaestroVersion=${version.Maestro}" />
			<arg value="-dAbcPlayerVersion=${version.AbcPlayer}" />
			<arg value="-dAbcToolsVersion=${version.AbcTools}" />
			<arg value="-o" />
			<arg value="${build}/MaestroInstaller.wixobj" />
			<arg value="MaestroInstaller.wix" />
		</exec>
		<exec executable="${tools}/wix/light.exe" failonerror="true">
			<arg value="-nologo" />
			<arg value="-sw1076" />
			<!-- Installer removes version numbers equal to itself -->
			<arg value="-ext" />
			<arg value="WixUIExtension" />
			<arg value="-loc" />
			<arg value="MaestroInstallerStrings.wxl" />
			<arg value="-pdbout" />
			<arg value="${build}/MaestroInstaller.wixobj" />
			<arg value="-o" />
			<arg value="${output}/${basename.Maestro}_v${version.Maestro}.msi" />
			<arg value="${build}/MaestroInstaller.wixobj" />
		</exec>
	</target>

	<target name="ZipFile" depends="preStuff" description="Make ZIP file">
		<mkdir dir="${output}" />
		<zip destfile="${output}/${basename.Maestro}_v${version.Maestro}.zip" basedir="${build}">
			<include name="${basename.Maestro}.jar" />
			<include name="${basename.AbcPlayer}.jar" />
			<include name="${basename.AbcTools}.jar" />
			<include name="LotroInstruments.sf2" />
			<include name="midifile.ico" />
			<include name="abcfile.ico" />
			<include name="msxfile.ico" />
			<include name="Maestro.exe" />
			<include name="AbcPlayer.exe" />
			<include name="AbcTools.exe" />
			<include name="Changes since Maestro 2.5.0.txt" />
		</zip>
	</target>

	<target name="Distribute" depends="Installer,ZipFile" description="Make final ZIP and MSI files"/>
	<extension-point name="AntTest" description="Run any targets that are labeled as extensionOf='AntTest'" />
</project>
