<project name="launch4j" default="compile" basedir=".">
	<description>
		launch4j private build file
	</description>
	<property name="src" location="src" />
	<property file="${src}/launch4j.properties"/>
	<property name="lib" location="lib" />
	<property name="bin" location="bin" />
	<property name="build" location="build" />
	<property name="build.web" location="web" />
	<property name="web.src" location="l4j/web" />
	<property name="dist" location="./dist/${version}" />
	<property name="jar" location="./${ant.project.name}.jar" />
	<property name="launch4j.dir" location="." />

	<path id="dist.classpath">
		<pathelement path="${build}" />
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="init">
		<tstamp />
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
	</target>

	<target name="compile" depends="init" description="compile the source">
		<javac srcdir="${src}" destdir="${build}" classpathref="dist.classpath" source="1.8" target="1.8" debug="on" includeantruntime="false" />
		<copy todir="${build}/images">
			<fileset dir="${src}/images">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${build}">
			<fileset dir="${src}">
				<include name="**/*.properties" />
			</fileset>
		</copy>
	</target>

	<target name="binutils-linux">
		<antcall target="clean-binutils" />
		<copy todir="${bin}">
			<fileset dir="${bin}/bin-linux">
				<include name="*" />
			</fileset>
		</copy>
		<chmod file="${bin}/windres" perm="+x" />
		<chmod file="${bin}/ld" perm="+x" />
		<chmod file="launch4j" perm="+x" />
	</target>
	
	<target name="binutils-linux-x64">
		<antcall target="clean-binutils" />
		<copy todir="${bin}">
			<fileset dir="${bin}/bin-linux64">
				<include name="*" />
			</fileset>
		</copy>
		<chmod file="${bin}/windres" perm="+x" />
		<chmod file="${bin}/ld" perm="+x" />
		<chmod file="launch4j" perm="+x" />
	</target>

	<target name="binutils-macosx-x86">
		<antcall target="clean-binutils" />
		<copy todir="${bin}">
			<fileset dir="${bin}/bin-macosx-x86">
				<include name="*" />
			</fileset>
		</copy>
		<chmod file="${bin}/windres" perm="+x" />
		<chmod file="${bin}/ld" perm="+x" />
		<chmod file="launch4j" perm="+x" />
	</target>

	<target name="binutils-win32">
		<antcall target="clean-binutils" />
		<copy todir="${bin}">
			<fileset dir="${bin}/bin-win32">
				<include name="*" />
			</fileset>
		</copy>
	</target>
	
	<target name="jar" depends="compile" description="create jar">
		<fileset dir="${lib}" id="lib.dist.fileset">
			<include name="**/*.jar" />
			<exclude name="**/ant.jar" />
		</fileset>
		<pathconvert pathsep=" " dirsep="/" property="dist.classpath" refid="lib.dist.fileset">
			<map from="${lib}" to="./lib" />
		</pathconvert>
		<!-- Put everything in ${build} into a jar file -->
		<jar jarfile="${jar}">
			<fileset dir="${build}" excludes="**/messages_es.properties" />
			<manifest>
				<attribute name="Main-Class" value="net.sf.launch4j.Main" />
				<attribute name="Class-Path" value=". ${dist.classpath}" />
			</manifest>
		</jar>
	</target>

	<target name="demo" depends="jar, binutils-win32" description="build the demos">
		<ant dir="./demo/ConsoleApp" inheritAll="false" />
		<ant dir="./demo/SimpleApp" inheritAll="false" />
	</target>

	<target name="dist.linux" depends="jar, webdocs" description="generate the Linux distribution">
		<antcall target="binutils-linux" />
		<tar destfile="${dist}/${ant.project.name}-${version}-linux.tgz" compression="gzip">
			<tarfileset dir="." prefix="/launch4j" filemode="755">
				<include name="launch4j"/>
				<include name="launch4jc"/>
			    <include name="bin/ld"/>
				<include name="bin/windres"/>
			</tarfileset>
			<tarfileset dir="." prefix="/launch4j">
			    <include name="**"/>
				<exclude name="launch4j"/>
				<exclude name="launch4jc"/>
				<exclude name="bin/ld"/>
				<exclude name="bin/windres"/>
			    <exclude name="bin/bin*/**"/>
				<exclude name="**/build/**"/>
				<exclude name="**/*.bat"/>
				<exclude name="**/*.exe"/>
				<exclude name="head_src/**/*.layout"/>
				<exclude name="l4j/**"/>
				<exclude name="sign4j/**"/>
				<exclude name="build-private.xml"/>
			</tarfileset>
		</tar>
	</target>

	<target name="dist.linux-x64" depends="jar, webdocs" description="generate the Linux x64 distribution">
		<antcall target="binutils-linux-x64" />
		<tar destfile="${dist}/${ant.project.name}-${version}-linux-x64.tgz" compression="gzip">
			<tarfileset dir="." prefix="/launch4j" filemode="755">
				<include name="launch4j"/>
				<include name="launch4jc"/>
			    <include name="bin/ld"/>
				<include name="bin/windres"/>
			</tarfileset>
			<tarfileset dir="." prefix="/launch4j">
			    <include name="**"/>
				<exclude name="launch4j"/>
				<exclude name="launch4jc"/>
				<exclude name="bin/ld"/>
				<exclude name="bin/windres"/>
			    <exclude name="bin/bin*/**"/>
				<exclude name="**/build/**"/>
				<exclude name="**/*.bat"/>
				<exclude name="**/*.exe"/>
				<exclude name="head_src/**/*.layout"/>
				<exclude name="l4j/**"/>
				<exclude name="sign4j/**"/>
				<exclude name="build-private.xml"/>
			</tarfileset>
		</tar>
	</target>

	<target name="dist.macosx-x86" depends="jar, webdocs" description="generate the x86 Mac OS X distribution">
		<antcall target="binutils-macosx-x86" />
		<tar destfile="${dist}/${ant.project.name}-${version}-macosx-x86.tgz" compression="gzip">
			<tarfileset dir="." prefix="/launch4j" filemode="755">
				<include name="launch4j"/>
				<include name="launch4jc"/>
			    <include name="bin/ld"/>
				<include name="bin/windres"/>
			</tarfileset>
			<tarfileset dir="." prefix="/launch4j">
			    <include name="**"/>
				<exclude name="launch4j"/>
				<exclude name="launch4jc"/>
				<exclude name="bin/ld"/>
				<exclude name="bin/windres"/>
			    <exclude name="bin/bin*/**"/>
				<exclude name="**/build/**"/>
				<exclude name="**/*.bat"/>
				<exclude name="**/*.exe"/>
				<exclude name="head_src/**/*.layout"/>
				<exclude name="l4j/**"/>
				<exclude name="sign4j/**"/>
				<exclude name="build-private.xml"/>
			</tarfileset>
		</tar>
	</target>
	
	<target name="dist.win32" depends="jar, webdocs, binutils-win32" description="generate the Windows distribution">
		<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${build}:./lib/xstream.jar" />
		<launch4j configFile="./l4j/launch4j.xml" fileVersion="${versionNumber}" txtFileVersion="${version}" productVersion="${versionNumber}" txtProductVersion="${version}" />
		<launch4j configFile="./l4j/launch4jc.xml" fileVersion="${versionNumber}" txtFileVersion="${version}" productVersion="${versionNumber}" txtProductVersion="${version}" />
		<!--<antcall target="binutils-win32" />
		<zip destfile="${dist}/${ant.project.name}-${version}-win32.zip">
			<zipfileset dir="." prefix="launch4j" excludes="**/build/** bin/bin*/** head_src/**/*.exe head_src/**/*.layout l4j/** build-private.xml launch4j launch4jc" />
		</zip>
		<mkdir dir="${dist}/nsis" />
		<unzip src="${dist}/${ant.project.name}-${version}-win32.zip" dest="${dist}/nsis"/>
		<copy todir="${dist}/nsis">
		  <fileset dir="l4j/nsis"/>
		</copy>
		<exec dir="${dist}/nsis" executable="c:\Program Files (x86)\NSIS\makensis.exe" failonerror="true">
			<arg line="launch4j.nsi"/>
		</exec>
		<move file="${dist}/nsis/${ant.project.name}-${version}-win32.exe" todir="${dist}"/>
		<delete dir="${dist}/nsis" />-->
	</target>

	<target name="webdocs">
		<concat destfile="${build.web}/index.html">
			<filelist dir="${web.src}" files="header.html, index.html, footer.html" />
		</concat>
		<concat destfile="${build.web}/changelog.html">
			<filelist dir="${web.src}" files="header.html, changelog.html, footer.html" />
		</concat>
		<concat destfile="${build.web}/docs.html">
			<filelist dir="${web.src}" files="header.html, docs.html, footer.html" />
		</concat>
		<concat destfile="${build.web}/links.html">
			<filelist dir="${web.src}" files="header.html, links.html, footer.html" />
		</concat>

		<replace dir="${build.web}">
			<include name="**/*.html"/>
			<replacefilter token="$$version" value="${version}"/>
		</replace>

		<copy todir="${build.web}">
			<fileset dir="${web.src}">
				<include name="**/*" />
				<exclude name="**/*.html" />
			</fileset>
		</copy>
	</target>

	<target name="dist" depends="clean.dist, clean.all, demo, webdocs, dist.win32, dist.macosx-x86, dist.linux, dist.linux-x64"
		description="generate all distributions" />

	<target name="clean-binutils">
		<delete>
			<fileset dir="${bin}" includes="*" excludes="COPYING" />
		</delete>
	</target>

	<target name="clean" description="clean up">
		<antcall target="clean-binutils" />
		<delete file="${jar}" />
		<delete>
			<fileset dir="." includes="*.exe" />
		</delete>
		<delete>
			<fileset dir="${build.web}" includes="*" />
		</delete>
		<ant dir="./demo/ConsoleApp" target="clean" inheritAll="false" />
		<ant dir="./demo/SimpleApp" target="clean" inheritAll="false" />
	</target>
	
	<target name="clean.dist">
		<delete dir="${dist}" />
	</target>

	<target name="clean.all" depends="clean" description="clean up">
		<delete dir="${build}" />
	</target>
</project>
